#!/usr/bin/env bash

CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
HELPERS_DIR="$CURRENT_DIR/helpers"

source "$HELPERS_DIR/format_utils.sh"

########################
# Utilities
########################
escape_level=1
function esc() {
  local escapes=0
  while [ $escapes -lt $escape_level ]; do
    printf '\033'
    escapes=$((escapes+1))
  done
}

########################
# Escape Sequences
########################
# Save Cursor
# http://www.vt100.net/docs/vt510-rm/DECSC.html
function decsc() {
  esc && printf '7'
}

# Restore Cursor
# http://www.vt100.net/docs/vt510-rm/DECRC.html
function decrc() {
  esc && printf '8'
}

########################
# Control Sequences
########################
# Control Sequence Introducer
# http://www.vt100.net/docs/vt510-rm/chapter4.html#S4.3.3
function csi_start() {
  esc && printf '['
}

# Cursor forward
# http://www.vt100.net/docs/vt510-rm/CUF.html
function cuf() {
  csi_start && printf "%dC" "$1"
}

# Cursor backward
# http://www.vt100.net/docs/vt510-rm/CUF.html
function cub() {
  csi_start && printf "%dD" "$1"
}

# Cursor position
# http://www.vt100.net/docs/vt510-rm/CUP.html
function cup() {
  csi_start && printf "%d;%dH" "$1" "$2"
}

########################
# Mouse Sequences
########################
function mouse_down() {
  csi_start && printf "<%d;%d;%dM" "$1" "$2" "$3"
}

function mouse_up() {
  csi_start && printf "<%d;%d;%dm" "$1" "$2" "$3"
}

########################
# Device Control Strings
########################
# DCS Start
# http://www.vt100.net/docs/vt510-rm/chapter4.html#S4.3.4
function dcs_start() {
  esc && printf 'P'
}

# DCS Terminator
# http://www.vt100.net/docs/vt510-rm/chapter4.html#S4.3.4
function dcs_end() {
  # shellcheck disable=SC1003
  esc && printf '\'
}

# tmux prefix
# https://github.com/tmux/tmux/blob/1fd6ca2260/input.c#L1791-L1793
function dcs_prefix() {
  printf 'tmux;'
}

# The only dcs cmd tmux defines is a raw string print
# https://github.com/tmux/tmux/blob/1fd6ca2260/input.c#L1801-L1806
function dcs_cmd() {
  local cmd="$1"
  shift

  dcs_start
  dcs_prefix
  escape_level=2
  $cmd "$@"
  escape_level=1
  dcs_end
}

cmd="$1"
shift

trap 'errexit' ERR
set -o errtrace

$cmd "$@" > "$(pane_tty)"
